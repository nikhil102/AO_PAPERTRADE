class LIVE_TRADE_OPT:
    Name = 'LIVE_TRADE_OPT'
    Column1 = ['EX_T_SIGNAL', 'EN_FUT_PRICE', 'EX_FUT_PRICE', 'OPT_STRIKE_PRICE', 'OPT_SYMBOL', 'OPT_TOKEN', 'EN_OPT_PRICE', 'EX_OPT_PRICE', 'EN_C_NUM', 'EX_C_NUM', 'TRADE_STATUS', 'TRADE_LOT','UPDATED_DATETIME','CREATE_DATETIME']
      
class EXP_CONFIG:
    Name = 'EXP_CONFIG'
    Column1 = ['FUT_EXPIRY_DATE', 'OPT_EXPIRY_DATE', 'T_DATE', 'FUT_EXPIRY_DATE_STR', 'OPT_EXPIRY_DATE_STR', 'FUT_TOKEN', 'FUT_SYMBOL', 'MARKET_IS_OPEN_TODAY', 'ke', 'UPDATED_DATE_TIME', 'CRE_DATIME']
    Custom_Col_Q1 = {'CRE_DATIME': 'CURRENT_TIMESTAMP'}

class SINGALS_TA_PULL:
    Name = 'SINGALS_TA_PULL'
    Column1 = ['TA_SIGNAL', 'MA', 'OSCI', 'FPRICE', 'CSP', 'PSP', 'BUY', 'NEUTRAL', 'SELL', 'TF', 'SID','UID', 'UPDATED_DATE_TIME']

class CURR_APP_LOG:
    Name = 'CURR_APP_LOG'
    Column1 = ['LOG_MODULE_NAME','LOG_TYPE','LOG_MESSAGE','ENV_TYPE','LOG_CREATE_DATE','LOG_CREATE_DATETIME']
    Custom_Col_Q1 = {'LOG_CREATE_DATETIME': 'CURRENT_TIMESTAMP'}
     
class CURR_ERROR_LOG:
    Name = 'CURR_ERROR_LOG'
    Column1 = ['ERR_MODULE_NAME','ERR_TYPE','ERR_MESSAGE','ENV_TYPE','ERR_CREATE_DATE','ERR_CREATE_DATETIME']
    Custom_Col_Q1 = {'ERR_CREATE_DATETIME': 'CURRENT_TIMESTAMP'}
    
class HIS_APP_LOG:
    Name = 'HIS_APP_LOG'
    Column1 = ['LOG_MODULE_NAME','LOG_TYPE','LOG_MESSAGE','ENV_TYPE','LOG_CREATE_DATE','LOG_CREATE_DATETIME','LOAD_CREATE_DATETIME']
    Custom_Col_Q1 = {'LOAD_CREATE_DATETIME': 'CURRENT_TIMESTAMP'}
    
class HIS_ERROR_LOG:
    Name = 'HIS_ERROR_LOG'
    Column1 = ['ERR_MODULE_NAME','ERR_TYPE','ERR_MESSAGE','ENV_TYPE','ERR_CREATE_DATE','ERR_CREATE_DATETIME','LOAD_CREATE_DATETIME']
    Custom_Col_Q1 = {'LOAD_CREATE_DATETIME': 'CURRENT_TIMESTAMP'}

class TABLEOBJ:
    @staticmethod
    def create(class_name):
        module = globals()
        if class_name in module:
            return module[class_name]()
        else:
            raise ValueError("Invalid TABLE NAME : THIS TABLE NAME CLASS IS NOT CREATED")
